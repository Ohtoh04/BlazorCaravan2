@implements IDisposable

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<div class="nav-full">
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <div class="menuicon" @onclick="ToggleNavbar">☰</div>
        </div>
    </div>


    <div class="nav-scrollable @(NavbarActive ? "active": "")">
        <div class="top-row ps-3 navbar navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="">BlazorCaravan2</a>
            </div>
        </div>

        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="auth">
                    <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="jointable">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Join game
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="createtable">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Create game
                </NavLink>
            </div>

            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Manage">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="nav-link">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Register">
                            <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Login">
                            <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </nav>
    </div>
</div>


@code {
    private string? currentUrl;
    public bool NavbarActive { get; set; } = false;

    public void ToggleNavbar()
    {
        NavbarActive = !NavbarActive;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

